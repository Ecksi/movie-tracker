// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header matches snapshot with user loggedIn true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    loadFavorites={[Function]}
    loggedIn={true}
    name="mock name"
    toggleLogin={[Function]}
    userId={1}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavLink
          activeClassName="active"
          ariaCurrent="true"
          to="/"
>
          <img
                    alt="movie-tracker logo"
                    className="headerLogo"
                    src="https://fontmeme.com/permalink/180520/17ff7fa8ddbb9659c011cbf5dacff735.png"
          />
</NavLink>,
        <div
          className="userControls"
>
          <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/"
          >
                    <button
                              className="logOut"
                              onClick={[Function]}
                    >
                              Log Out
                    </button>
          </NavLink>
          <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    to="/favorites"
          >
                    <button
                              className="favorites"
                              onClick={[Function]}
                    >
                              Favorites
                    </button>
          </NavLink>
          <p>
                    Welcome back, 
                    mock name
          </p>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "ariaCurrent": "true",
          "children": <img
            alt="movie-tracker logo"
            className="headerLogo"
            src="https://fontmeme.com/permalink/180520/17ff7fa8ddbb9659c011cbf5dacff735.png"
/>,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "movie-tracker logo",
            "className": "headerLogo",
            "src": "https://fontmeme.com/permalink/180520/17ff7fa8ddbb9659c011cbf5dacff735.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              to="/"
>
              <button
                            className="logOut"
                            onClick={[Function]}
              >
                            Log Out
              </button>
</NavLink>,
            <NavLink
              activeClassName="active"
              ariaCurrent="true"
              to="/favorites"
>
              <button
                            className="favorites"
                            onClick={[Function]}
              >
                            Favorites
              </button>
</NavLink>,
            <p>
              Welcome back, 
              mock name
</p>,
          ],
          "className": "userControls",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": <button
                className="logOut"
                onClick={[Function]}
>
                Log Out
</button>,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Log Out",
                "className": "logOut",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Log Out",
              "type": "button",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": <button
                className="favorites"
                onClick={[Function]}
>
                Favorites
</button>,
              "to": "/favorites",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Favorites",
                "className": "favorites",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Favorites",
              "type": "button",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Welcome back, ",
                "mock name",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Welcome back, ",
              "mock name",
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            to="/"
>
            <img
                        alt="movie-tracker logo"
                        className="headerLogo"
                        src="https://fontmeme.com/permalink/180520/17ff7fa8ddbb9659c011cbf5dacff735.png"
            />
</NavLink>,
          <div
            className="userControls"
>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/"
            >
                        <button
                                    className="logOut"
                                    onClick={[Function]}
                        >
                                    Log Out
                        </button>
            </NavLink>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to="/favorites"
            >
                        <button
                                    className="favorites"
                                    onClick={[Function]}
                        >
                                    Favorites
                        </button>
            </NavLink>
            <p>
                        Welcome back, 
                        mock name
            </p>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": <img
              alt="movie-tracker logo"
              className="headerLogo"
              src="https://fontmeme.com/permalink/180520/17ff7fa8ddbb9659c011cbf5dacff735.png"
/>,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "movie-tracker logo",
              "className": "headerLogo",
              "src": "https://fontmeme.com/permalink/180520/17ff7fa8ddbb9659c011cbf5dacff735.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/"
>
                <button
                                className="logOut"
                                onClick={[Function]}
                >
                                Log Out
                </button>
</NavLink>,
              <NavLink
                activeClassName="active"
                ariaCurrent="true"
                to="/favorites"
>
                <button
                                className="favorites"
                                onClick={[Function]}
                >
                                Favorites
                </button>
</NavLink>,
              <p>
                Welcome back, 
                mock name
</p>,
            ],
            "className": "userControls",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "ariaCurrent": "true",
                "children": <button
                  className="logOut"
                  onClick={[Function]}
>
                  Log Out
</button>,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Log Out",
                  "className": "logOut",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Log Out",
                "type": "button",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "ariaCurrent": "true",
                "children": <button
                  className="favorites"
                  onClick={[Function]}
>
                  Favorites
</button>,
                "to": "/favorites",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Favorites",
                  "className": "favorites",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Favorites",
                "type": "button",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Welcome back, ",
                  "mock name",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Welcome back, ",
                "mock name",
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
